# -*- coding: utf-8 -*-
"""studio11.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k99KmcSiqBC0w6AMIxCluOzsPtOwDlQS
"""

!pip install git+https://github.com/facebookresearch/segment-anything.git

import segment_anything
print("✅ segment_anything module is installed successfully!")

!wget -O /content/sam_vit_b_01ec64.pth https://dl.fbaipublicfiles.com/segment_anything/sam_vit_b_01ec64.pth

import os
print(os.listdir())  # Check if the file is in /content/

sam_checkpoint = "/content/sam_vit_b_01ec64.pth"  # Correct path for Colab

from google.colab import files
uploaded = files.upload()  # Upload "SampleImg.png"

import cv2  # ✅ Make sure OpenCV is imported

# Load Sample Image
sample_image_path = "/content/SampleImg.png"
sample_image = cv2.imread(sample_image_path, cv2.IMREAD_UNCHANGED)

# Check if the image was loaded correctly
if sample_image is None:
    print("❌ Error: Image not found. Check the file path!")
else:
    print("✅ Image loaded successfully!")

sample_image_path = "/content/SampleImg.png"  # Correct path in Colab

if sample_image is not None:
    sample_image = cv2.resize(sample_image, (600, 200))
    print("✅ Image resized successfully!")
else:
    print("❌ Cannot resize: Image not found.")

from google.colab import files
uploaded = files.upload()  # Upload "Living room.png"

import os
print(os.listdir("/content"))  # List files in Colab directory

import cv2
import numpy as np
import matplotlib.pyplot as plt

# Load images
painting_path = "/content/SampleImg.png"  # Painting image
room_path = "/content/Living room.png"  # Lifestyle image

# Load painting and lifestyle image
painting = cv2.imread(painting_path, cv2.IMREAD_UNCHANGED)  # Load painting
room = cv2.imread(room_path)  # Load room image

# Check if images are loaded correctly
if painting is None:
    print("❌ Error: Painting image not found!")
    exit()
if room is None:
    print("❌ Error: Lifestyle image not found!")
    exit()

# Convert images to RGB (Matplotlib expects RGB format)
painting = cv2.cvtColor(painting, cv2.COLOR_BGR2RGB)
room = cv2.cvtColor(room, cv2.COLOR_BGR2RGB)

# Resize painting to fit within the available space
max_width = room.shape[1] - 100  # Ensure the painting doesn't exceed room width
new_width = min(400, max_width)  # Keep max width 400 or less
painting_resized = cv2.resize(painting, (new_width, 150))  # Adjust height as needed

# Add a frame (brown border)
frame_thickness = 10  # Adjust thickness if needed
frame_color = (60, 30, 10)  # Brownish frame color (RGB)
framed_painting = cv2.copyMakeBorder(
    painting_resized,
    frame_thickness, frame_thickness, frame_thickness, frame_thickness,
    cv2.BORDER_CONSTANT, value=frame_color
)

# New size after adding the frame
h, w, _ = framed_painting.shape

# Ensure the painting fits within the room boundaries
x_offset = min(200, room.shape[1] - w - 10)  # Prevent going out of bounds
y_offset = 30  # Keep it at a reasonable height

# Overlay painting on room
room[y_offset:y_offset+h, x_offset:x_offset+w] = framed_painting

# Display result
plt.figure(figsize=(10, 5))
plt.imshow(room)
plt.axis("off")
plt.title("Framed Painting Placed on Wall")
plt.show()

